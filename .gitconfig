# Git Config Reference
# - http://git-scm.com/book/en/Customizing-Git-Git-Configuration
# - https://github.com/tiimgreen/github-cheat-sheet#git-configurations
# - http://haacked.com/archive/2014/07/28/github-flow-aliases/
# Docs: `$ man git-<command>` (e.g. `$ man git-push`)

# ───────────────────────────────────────────────────────────────
# Git Config Levels
#   1) Project:  `.git/config` in the project
#       $ git config user.name "John Doe"
#   2) Global:   `~/.gitconfig`
#       $ git config --global user.name "John Doe"
#   3) System:   `/etc/gitconfig`
#       $ git config --system user.name "John Doe"
# ───────────────────────────────────────────────────────────────

# ─── Aliases ────────────────────────────────────────────────────
[alias]
  # Add / Commit
  a = add
  aa = add --all
  c = commit
  cam = !git add --all && git commit --message
  cm = commit --message
  save = !git add --all && git commit -m 'SAVEPOINT'
  wip = !git add --update && git commit --message="WIP"
  wipe = !git add --all && git commit --quiet --message='WIPE SAVEPOINT' && git reset head~1 --hard
  amend = commit --all --amend
  undo = reset --mixed head~1

  # Branching
  br = branch
  brm = branch --move
  branches = branch -a
  cob = checkout -b
  col = checkout -
  com = checkout main
  comf = checkout origin/main
  bclean = "!f() { git branch --merged ${1-main} | grep -v \" ${1-main}$\" | xargs -r git branch -d; }; f"
  bdone = "!f() { git checkout ${1-main} && git up && git bclean ${1-main}; }; f"

  # Checkout
  co = checkout

  # Config Helpers
  cg = config --global
  cge = config --global --edit
  aliases = config --get-regexp alias

  # Diff / Grep / Log
  df = diff
  g = grep -I
  lg = log --patch
  lol = log --graph --oneline --date-order --decorate --color --all -n 250
  loq = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --

  # Pull / Push
  fps = !git fetch && git pull && git status
  pn = push --set-upstream origin head
  pf = push --force
  prune = fetch --prune
  up = !git pull --rebase --prune $@ && git submodule update --init --recursive

  # Remotes
  remotes = remote --verbose
  pb = publish-branch

  # Rebase / Review
  rb = rbranch
  rbm = rebase main
  rbmi = rebase --interactive main
  rv = review

  # Stash / Show
  sa = stash apply # apply latest stash
  sp = stash pop # apply and drop latest stash
  su = stash -u # stash including untracked files
  sta = stash -a # stash all, including ignored files
  sl = stash list # list all stashes
  ss = stash show # show diff of latest stash
  spm = "!f() { git stash push -u -m \"$@\"; }; f" # stash with custom message
  sap = "!git stash list | fzf | cut -d: -f1 | xargs git stash apply" # fuzzy apply by title
  spp = "!git stash list | fzf | cut -d: -f1 | xargs git stash pop" # fuzzy pop by title
  sm = log --merges --oneline --graph --decorate

  # Status / Tags
  s = status
  st = status --short --branch
  tags = tag --list

# ─── Core Settings ──────────────────────────────────────────────
[core]
  autocrlf = false
  ignorecase = false
  whitespace = space-before-tab,indent-with-non-tab,trailing-space
  excludesfile = ~/.gitignore_global

# ─── Push Settings ──────────────────────────────────────────────
[push]
  default = simple
  followTags = true

# ─── Merge Settings ─────────────────────────────────────────────
[merge]
  #ff = only
  #log = true
  #conflictstyle = diff3

# ─── Rebase Behavior ────────────────────────────────────────────
[branch]
  autosetuprebase = always

# ─── Rerere ─────────────────────────────────────────────────────
[rerere]
  enabled = 1

# ─── Color Settings ─────────────────────────────────────────────
[color]
  ui = auto

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold

[color "status"]
  added = yellow
  changed = green
  untracked = cyan

# ─── Help Behavior ──────────────────────────────────────────────
[help]
  autocorrect = 1

# ─── Git LFS ────────────────────────────────────────────────────
[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true

# ─── Status Behavior ────────────────────────────────────────────
[status]
  showUntrackedFiles = all

# ─── Transfer Behavior ──────────────────────────────────────────
[transfer]
  fsckobjects = true
